link to assignment.md

part 1 - todo app

Mostly generated by air under my direction, supervision and full understanding
strict ts, eslint, prettier

install: clone, pnpm this and that
running instructions - backend and frontend
pnpm dev this and that
then app open url in the browser
can open the / server for openapi doc
tests:
with test commands or vitest extension
can run run api-tests from api-tests folder
developemnt:
link to recomened extension file

backend

backend based on that express ts boilerplate
link - https://github.com/GeekyAnts/express-typescript
includes middlewares and users api - left as is for any case

explain why the boilerplate was built that way - the architecture

list the generated at /api-tests
+link to this folder

link to todos.md

optional:
[
imporovements

- the api improvements from the existing readme

could deploy to --- but need to change express to other framework:

- deploy front and back to cloudflare with signing in just with username and saving all to that user

monorepo different solutions

e2e testing

CI/CD - with version control

]

frontend

choose the rspack based on poluarity support speed and capabilities
choose react based on popularity and familiriaty
choose styled-jsx , suggested in rsbuild, and based on ai support

part 2 system design and architecture
link to the md
explain - ai generated. it looks correct to me and good starting point for plan

whatever else you think should be in readme of git repo
